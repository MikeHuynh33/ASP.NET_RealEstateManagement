@model ASP.NET_RealEstateManagement.Models.AgentsAndPropertiesViewModel
@{
    Boolean isAdmin = ViewBag.IsAdmin;
    ViewBag.Title = "index";
}
<style>
    .Task_container {
        margin-top: 5em;
        margin-left: 4em;
        margin-right: 4em;
        display: flex;
        justify-content: center;
        align-items: flex-start;
        gap: 2em;
        flex-wrap: wrap;
    }

    .Task_Property_Container {
        flex-basis: calc(50% - 5em );
        position: relative;
        display: flex;
        flex-direction: column;
        border-radius: 15px;
        gap: 1.5em;
        border: 2px solid black;
        padding: 2em;
    }

        .Task_Property_Container form {
            display: block;
            text-align: right;
            margin-left: 1em;
            margin-top: 1em;
            margin-bottom:1em;
        }

        .Task_Property_Container input[type="text"] {
            width: 300px;
            border: 3px solid black;
        }

        .Task_Property_Container input[type="submit"] {
            margin-left: 1em;
            padding: 3px 10px;
            border-radius: 15px;
        }

    .Task_Agent_Container {
        position: relative;
        flex-basis: calc(50% - 5em );
        display: flex;
        flex-direction: column;
        border-radius: 15px;
        border: 2px solid black;
        gap:2em;
        padding: 2em;
    }

        .Task_Agent_Container input[type="text"] {
            width: 300px;
            border: 3px solid black;
        }

        .Task_Agent_Container form {
            display: block;
            text-align: right;
            margin-left: 1em;
            margin-top: 1em;
            margin-bottom: 1em;
        }

        .Task_Agent_Container input[type="text"] {
            width: 300px;
            border: 3px solid black;
        }

        .Task_Agent_Container input[type="submit"] {
            margin-left: 1em;
            padding: 3px 10px;
            border-radius: 15px;
        }

    .btn_add {
        position: absolute;
        top: 10px;
        right: 10px;
        width: 10em;
        height: 2em;
    }
    .property_item{
        display:flex;
        justify-content:space-between;
        align-items:center;
        border-bottom: 2px dotted black;
        padding-bottom:5px;
    }
    .property_address{
        font-size:1.2em;
        font-family:bold;
    }
    .property_btn a{
        padding:5px;
        font-size:1.1em;
        font-weight:600;
        border: 2px solid black;
        margin-left: 5px;
        border-radius:15px;
        cursor:pointer;
    }
    .agent_item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 2px dotted black;
        padding-bottom: 5px;
    }

    .agent_name {
        font-size: 1.2em;
        font-family: bold;
    }

    .agent_btn a {
        padding: 5px;
        font-size: 1.1em;
        font-weight: 600;
        border: 2px solid black;
        margin-left: 5px;
        border-radius: 15px;
        cursor: pointer;
    }
</style>
@if (isAdmin)
{
    <div class="Task_container">
        <div id="Task_Property_Container" class="Task_Property_Container">
            <h2>Property Details:</h2> <button class="btn_add"><a href="/Admin/AddNewProperty">Add Property</a></button>
            <form method="GET" action="/Admin">
                <input type="text" name="Searchproperty" />
                <input type="submit" value="Search" />
            </form>
            @foreach (var property in Model.Properties)
            {
                <div class="property_item">
                    <div class="property_address">
                        @property.PropertyAddress
                    </div>
                    <div class="property_btn">
                        <a href='/Admin/PropertyDetail/@property.PropertyID'>View</a><a href='/Admin/PropertyEdit/@property.PropertyID'>Edit</a><a href='/Admin/DeleteConfirm/@property.PropertyID'>Delete</a>
                    </div>
                </div>
            }
            <div id="pagination_property">
                <button onclick="previousPage_property()">Previous</button>
                <button onclick="nextPage_property()">Next</button>
            </div>
        </div>
        <div id="Task_Agent_Container" class="Task_Agent_Container">
            <h2>Agents Details:</h2> <button class="btn_add"><a href="/Admin/AddNewAgent">Add Agent</a></button>
            <form method="GET" action="/Admin">
                <input type="text" name="Searchproperty" />
                <input type="submit" value="Search" />
            </form>
            @foreach (var agent in Model.Agents)
            {
                <div class="agent_item">
                    <div class="agent_name">
                        @agent.Name <br /> @agent.Email | @agent.Role
                    </div>
                    <div class="agent_btn">
                        <a href='/Admin/AgentDetail/@agent.EstateAgentId'>View</a><a href='/Admin/AgentEdit/@agent.EstateAgentId'>Edit</a><a href='/Admin/DeleteAgentConfirm/@agent.EstateAgentId'>Delete</a>
                    </div>
                </div>
            }
            <div id="pagination">
                <button onclick="previousPage()">Previous</button>
                <button onclick="nextPage()">Next</button>
            </div>
        </div>
        
    </div>
}
else
{
    <div class="NotAdmin_Error">
        ERROR :  You dont have the permisssion as Admin , Please Go back to <a href="/">HOME PAGE</a>
    </div>
}
<script>
    var container = document.getElementById("Task_Agent_Container");
    var children = container.getElementsByClassName("agent_item");
    var itemsPerPage = 5;
    var currentPage = 1;

    function showPage(page) {
        var startIndex = (page - 1) * itemsPerPage;
        var endIndex = startIndex + itemsPerPage;

        for (var i = 0; i < children.length; i++) {
            if (i >= startIndex && i < endIndex) {
                children[i].style.display = "flex";
            } else {
                children[i].style.display = "none";
            }
        }
    }

    function nextPage() {
        if (currentPage < Math.ceil(children.length / itemsPerPage)) {
            currentPage++;
            showPage(currentPage);
        }
    }

    function previousPage() {
        if (currentPage > 1) {
            currentPage--;
            showPage(currentPage);
        }
    }

    showPage(currentPage);

    // Property Panigation
    var container_property = document.getElementById("Task_Property_Container");
    var children_property = container_property.getElementsByClassName("property_item");
    var itemsPerPage_property = 7;
    var currentPage_property = 1;

    function showPage_property(page) {
        var startIndex = (page - 1) * itemsPerPage_property;
        var endIndex = startIndex + itemsPerPage_property;

        for (var i = 0; i < children_property.length; i++) {
            if (i >= startIndex && i < endIndex) {
                children_property[i].style.display = "flex";
            } else {
                children_property[i].style.display = "none";
            }
        }
    }

    function nextPage_property() {
        if (currentPage_property < Math.ceil(children_property.length / itemsPerPage_property)) {
            currentPage_property++;
            showPage_property(currentPage_property);
        }
    }

    function previousPage_property() {
        if (currentPage_property > 1) {
            currentPage_property--;
            showPage_property(currentPage_property);
        }
    }
    showPage_property(currentPage_property);
</script>

